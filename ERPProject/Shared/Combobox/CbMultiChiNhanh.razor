@using System.Collections.ObjectModel;
@using DAO.Services.DanhMuc;
@using DAO.Models.DanhMuc;
@using MsUtils;

<SfMultiSelect @ref="MultiSelectObj" TValue="int[]" TItem="prc_ChiNhanh" Placeholder="Chọn chi nhánh" @bind-Value="Value" DataSource="@Data"
               AllowFiltering="true"
               Width="@Width"
               PopupWidth="@PopupWidth">
    <MultiSelectEvents TItem="prc_ChiNhanh" TValue="int[]" ValueChange="@ValueChangeHandler"></MultiSelectEvents>
    <MultiSelectFieldSettings Text="Ten" Value="Id"></MultiSelectFieldSettings>
</SfMultiSelect>

@code {
    SfMultiSelect<int[], prc_ChiNhanh> MultiSelectObj;
    private List<prc_ChiNhanh> Data = new List<prc_ChiNhanh>();
    [Parameter]
    public EventCallback<int[]> OnDataSent { get; set; }
    public int[] selectedChiNhanh { get; set; }
    [Parameter]
    public string PopupWidth { get; set; } = "200px";

    [Parameter]
    public string Width { get; set; } = "100px";
    [Parameter]
    public int[] Value { get; set; } = new int[] { };
    protected override void OnInitialized()
    {
        if(GlobalValue.ms_chinhanh != null)
        {
            Data = DmChiNhanhService.GetToComBobyIdChiNhanh(GlobalValue.ms_chinhanh).Data;
        }
        else
        {
            Data = DmChiNhanhService.GetToComBobyIdChiNhanhAll().Data;
        }
    }

    public async Task ValueChangeHandler(MultiSelectChangeEventArgs<int[]> args)
    {
        // Assuming Value and listcn are defined somewhere in your code
        // and are accessible in this scope.

        if (args.Value != null)
        {
            Value = args.Value;
            //GlobalValue.tramCn = Value;
            selectedChiNhanh =  Value;
            // Emit the event with the selected values
            await SendDataToParent();
        }

    }

    public async Task SendDataToParent()
    {        
        await OnDataSent.InvokeAsync(selectedChiNhanh);
        
        StateHasChanged();
    }

}
