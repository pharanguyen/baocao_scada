@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<div class="navbar navbar-expand-md navbar-light fixed-top" style=" z-index:100;" >
    
    <div class="navbar-header navbar-dark d-none d-md-flex align-items-md-center">
        <div class="navbar-brand navbar-brand-md" style="text-align: center; ">
            <a href="/" class="d-inline-block" style="margin-left: -0.75rem; ">
            </a>
        </div>

        <div class="navbar-brand navbar-brand-xs">
            <a href="/" class="d-inline-block">
            </a>
        </div>
    </div>
    <!-- /header with logos -->
    <!-- Mobile controls -->

    <div class="d-flex flex-1 d-md-none">
        <div class="navbar-brand mr-auto">
            <a href="/" class="d-inline-block"></a>
            <span class="sloganMobile"></span>
        </div>

        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-mobile">
            <i class="icon-tree5"></i>
        </button>

        <button class="navbar-toggler sidebar-mobile-main-toggle" type="button">
            <i class="icon-paragraph-justify3"></i>
        </button>
    </div>

    <!-- /mobile controls -->
    <!-- Navbar content -->
    <div class="collapse navbar-collapse" id="navbar-mobile">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a href="#" class="navbar-nav-link sidebar-control sidebar-main-toggle d-none d-md-block">
                    <i class="icon-paragraph-justify3"></i>
                </a>
            </li>
        </ul>

        <span class="ml-md-3 mr-md-auto">...</span>

        <ul class="navbar-nav">
            <li class="nav-item dropdown">

                <div class="dropdown-menu dropdown-menu-right dropdown-content wmin-md-350">
                    <div class="dropdown-content-body dropdown-scrollable">                       
                    </div>
                </div>
            </li>
            <li class="nav-item">
                <a @onclick="toggleFullScreen" href="javascript:void(0);" class="navbar-nav-link d-flex align-items-center fullscreen">
                    <i class="icon-enlarge"></i>
                </a>
            </li>
            @{
                if (_HoTen != null)
                {
                    <li class="nav-item dropdown dropdown-user">
                        <a href="#" class="navbar-nav-link d-flex align-items-center dropdown-toggle" data-toggle="dropdown">
                            <img src="@_HinhAnh" class="rounded-circle mr-2" height="24" alt="">
                            <span>Xin chào, @_HoTen!</span>
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">
                            <NavLink href="/trang-ca-nhan" class="dropdown-item"><i class="icon-user"></i> Trang cá nhân</NavLink>
                            <NavLink href="/doi-mat-khau" class="dropdown-item"><i class="icon-lock5"></i> Đổi mật khẩu</NavLink>
                            <a href="#" @onclick="(() => Logout())" class="dropdown-item"><i class="icon-switch2"></i> Đăng xuất</a>
                        </div>
                    </li>
                }
                else
                {
                    <li class="nav-item dropdown dropdown-user">
                        <a href="#" class="navbar-nav-link d-flex align-items-center dropdown-toggle" data-toggle="dropdown">
                            <img src="/assets/imgs/icon-user.png" class="rounded-circle mr-2" height="34" alt="">
                            <span>Chưa đăng nhập!</span>
                        </a>
                    </li>
                }
            }
        </ul>
    </div>
</div>
@code {
    [Inject]
    protected IJSRuntime js { get; set; }
    [Parameter]
    public string display { get; set; } = "none";

    // bool IsUserAuthenticated;
    private string _HoTen = "";
    private string _HinhAnh = "";

    protected override async Task OnInitializedAsync()
    {
        //_HoTen = await localStorage.GetItemAsync<string>("Ten");
        _HoTen = await localStorage.GetItemAsync<string>("Ten");
        _HinhAnh = await localStorage.GetItemAsync<string>("HinhAnh");
        
        onTaiThongBao();
    }

    public async Task Logout()
    {
        await localStorage.RemoveItemAsync("Token");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //chuyen trang ve man hinh chinh
        NavigationManager.NavigateTo("/dang-nhap",true);
    }

    public async void toggleFullScreen()
    {
        await js.InvokeVoidAsync("toggleFullScreen");
    }

    
    protected async void onTaiThongBao()
    {
        
        StateHasChanged();
    }
    public async Task TatCaThongBao()
    {        
        //chuyen trang ve man hinh chinh
        NavigationManager.NavigateTo("/ThongBao",false);
    }
    protected void XacNhanLuu(int? _trangThai)
    {
        if (_trangThai != null) onTaiThongBao();
    }
    protected void onThemMoi()
    {
        
    }
    protected void onDocThongBao(Int64 _ID, Int64 _IDThongbao_Nhan)
    {
       
    }
    protected async void CapNhatDaDoc(Int64 _ID)
    {
       
    }
}