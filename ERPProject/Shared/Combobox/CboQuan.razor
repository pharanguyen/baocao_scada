@using System.Collections.ObjectModel;
@using DAO.Services.DanhMuc;
@using DAO.Models.DanhMuc;
@using Syncfusion.Blazor.DropDowns;
<style>
    .column-width {
        width: 75px;
    }
</style>
<SfDropDownList Placeholder="Chọn..." @ref="cb"
                @bind-Value="@Value" TValue="int?"
                Width="@Width"
                PopupWidth="@PopupWidth"
                TItem="@quan"
                AllowFiltering="true"
                FilterType="@Syncfusion.Blazor.DropDowns.FilterType.Contains"
                CssClass="e-multi-column"
                ShowClearButton="true" DataSource="Data">

    <DropDownListFieldSettings Text="ten_quan" Value="ms_quan"></DropDownListFieldSettings>
    <DropDownListTemplates TItem="@quan">
        <HeaderTemplate>
            <table>
                <tr>
                    <th>Mã</th>
                    <th>Tên Phường</th>
                    <th>Vị trí</th>
                </tr>
            </table>
        </HeaderTemplate>
        <ItemTemplate>
            <table>
                <tbody>
                    <tr>
                        <td class="e-text-center column-width">
                            @((context as quan).ms_quan)
                        </td>
                        <td>@((context as quan).ten_quan)</td>
                        <td>@((context as quan).vi_tri)</td>
                    </tr>
                </tbody>
            </table>
        </ItemTemplate>
        <ValueTemplate>
            <span>@((context as quan).ms_quan) - @((context as quan).ten_quan) </span>
        </ValueTemplate>
    </DropDownListTemplates>
    <DropDownListEvents TValue="int?" TItem="@DAO.Models.DanhMuc.quan" ValueChange="ValueChange" Filtering="onFilter"></DropDownListEvents>
</SfDropDownList>

@code {
    private SfDropDownList<int?, quan> cb;
    private List<quan> Data = new List<quan>();
    [Parameter]
    public int Index { get; set; }

    [Parameter]
    public string PopupWidth { get; set; } = "200px";

    [Parameter]
    public string Width { get; set; } = "100px";

    [Parameter]
    public int? Value { get; set; }
    [Parameter]
    public EventCallback<int?> ValueChanged { get; set; }
    private void ValueChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int?, DAO.Models.DanhMuc.quan> args)
    {
        Value = args.Value;
        ValueChanged.InvokeAsync(Value);
    }
    protected override void OnInitialized()
    {
        Data = quanService.GetToComBo().Data;
    }
    public void setFocus()
    {
        cb.FocusIn();
    }
    [Parameter]
    public EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs> Filtering { get; set; }

    public async void onFilter(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        if (args.Text == null || args.Text.Trim() == "")
        {
            Data = quanService.GetToComBo().Data;
        }
        else
        {
            Data = quanService.GetByKeyword(args.Text).Data;
        }
        await cb.FilterAsync(Data);
        StateHasChanged();
    }



}
